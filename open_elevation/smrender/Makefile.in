# Makefile.in generated by automake 1.15.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/m4_ax_pthread.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_noinst_SCRIPTS) \
	$(dist_available_rules_DATA) $(dist_noinst_DATA) \
	$(dist_seamapsymbols_DATA) $(dist_smrender_data_DATA) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = tools/smfilter2
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(available_rulesdir)" \
	"$(DESTDIR)$(seamapsymbolsdir)" \
	"$(DESTDIR)$(smrender_datadir)"
SCRIPTS = $(dist_noinst_SCRIPTS) $(nodist_bin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_available_rules_DATA) $(dist_noinst_DATA) \
	$(dist_seamapsymbols_DATA) $(dist_smrender_data_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/tools/smfilter2.in AUTHORS COPYING ChangeLog \
	README TODO ar-lib compile config.guess config.sub depcomp \
	install-sh ltmain.sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CAIRO_CFLAGS = @CAIRO_CFLAGS@
CAIRO_LIBS = @CAIRO_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CRYPTO_CFLAGS = @CRYPTO_CFLAGS@
CRYPTO_LIBS = @CRYPTO_LIBS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXP_DYN = @EXP_DYN@
FGREP = @FGREP@
FONTCONFIG_CFLAGS = @FONTCONFIG_CFLAGS@
FONTCONFIG_LIBS = @FONTCONFIG_LIBS@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBJPEG_CFLAGS = @LIBJPEG_CFLAGS@
LIBJPEG_LIBS = @LIBJPEG_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
RSVG_CFLAGS = @RSVG_CFLAGS@
RSVG_LIBS = @RSVG_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SMFILTER_NAME = @SMFILTER_NAME@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
smrender_datadir = @smrender_datadir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = libsmrender src smrenderd libsmfilter libskel
ACLOCAL_AMFLAGS = -I m4
dist_smrender_data_DATA = rules/rules.osm rules/rulesbig.osm rules/rules_land.osm
available_rulesdir = $(smrender_datadir)/available
dist_available_rules_DATA = \
	rules/available/basemap_col.osm \
	rules/available/basemap.osm \
	rules/available/landfeatures.osm \
	rules/available/legend.osm \
	rules/available/lightsectors_bw.osm \
	rules/available/lightsectors_col.osm \
	rules/available/route.osm \
	rules/available/seamark_area.osm \
	rules/available/seamark_beacon.osm \
	rules/available/seamark_buoy.osm \
	rules/available/seamark_compass.osm \
	rules/available/seamark_rocks.osm \
	rules/available/seamark_topmark.osm \
	rules/available/soundings.osm \
	rules/available/translation.osm

rules_100000dir = $(smrender_datadir)/rules_100000
r100k_yedir = $(smrender_datadir)/r100k_ye
r100k_coldir = $(smrender_datadir)/r100k_col
nodist_bin_SCRIPTS = tools/smfilter2
dist_noinst_SCRIPTS = tools/smfilter2.in
seamapsymbolsdir = $(smrender_datadir)/SeaMapSymbols
dist_seamapsymbols_DATA = \
SeaMapSymbols/AnchorageER.svg \
SeaMapSymbols/Anchorage.svg \
SeaMapSymbols/Anchor_Berth.svg \
SeaMapSymbols/Barrel.svg \
SeaMapSymbols/Barrel_Yellow.svg \
SeaMapSymbols/Beacon_Black_Red_Black.svg \
SeaMapSymbols/Beacon_Black_Yellow_Black.svg \
SeaMapSymbols/Beacon_Black_Yellow.svg \
SeaMapSymbols/Beacon_Green_Red_Green.svg \
SeaMapSymbols/Beacon_Green.svg \
SeaMapSymbols/Beacon_Green_White_Green_White.svg \
SeaMapSymbols/Beacon_Red_Green_Red_Green.svg \
SeaMapSymbols/Beacon_Red_Green_Red.svg \
SeaMapSymbols/Beacon_Red.svg \
SeaMapSymbols/Beacon_Red_White_Red_White.svg \
SeaMapSymbols/Beacon_Red_White.svg \
SeaMapSymbols/Beacon.svg \
SeaMapSymbols/Beacon_Yellow_Black.svg \
SeaMapSymbols/Beacon_Yellow_Black_Yellow.svg \
SeaMapSymbols/Beacon_Yellow.svg \
SeaMapSymbols/Board_Bottom.svg \
SeaMapSymbols/Board_Top.svg \
SeaMapSymbols/Boatyard.svg \
SeaMapSymbols/Bollard.svg \
SeaMapSymbols/Cable.svg \
SeaMapSymbols/Cairn.svg \
SeaMapSymbols/Can_Black_Red_Black.svg \
SeaMapSymbols/Can_Black_Yellow_Black.svg \
SeaMapSymbols/Can_Black_Yellow.svg \
SeaMapSymbols/Can_Green_Red_Green.svg \
SeaMapSymbols/Can_Green.svg \
SeaMapSymbols/Can_Red_Green_Red_Green.svg \
SeaMapSymbols/Can_Red_Green_Red.svg \
SeaMapSymbols/Can_Red.svg \
SeaMapSymbols/Can_Red_White_Red_White.svg \
SeaMapSymbols/Can.svg \
SeaMapSymbols/Can_Yellow_Black.svg \
SeaMapSymbols/Can_Yellow_Black_Yellow.svg \
SeaMapSymbols/Can_Yellow.svg \
SeaMapSymbols/Chandler.svg \
SeaMapSymbols/Chimney.svg \
SeaMapSymbols/ChurchA.svg \
SeaMapSymbols/ChurchDome.svg \
SeaMapSymbols/ChurchSpire.svg \
SeaMapSymbols/Church.svg \
SeaMapSymbols/ChurchTower.svg \
SeaMapSymbols/Clear_H.svg \
SeaMapSymbols/Clear_V.svg \
SeaMapSymbols/Cone_Black_Red_Black.svg \
SeaMapSymbols/Cone_Black_Yellow_Black.svg \
SeaMapSymbols/Cone_Black_Yellow.svg \
SeaMapSymbols/Cone_Green_Red_Green.svg \
SeaMapSymbols/Cone_Green.svg \
SeaMapSymbols/Cone_Green_White_Green_White.svg \
SeaMapSymbols/Cone_Red_Green_Red_Green.svg \
SeaMapSymbols/Cone_Red_Green_Red.svg \
SeaMapSymbols/Cone_Red.svg \
SeaMapSymbols/Cone.svg \
SeaMapSymbols/Cone_Yellow_Black.svg \
SeaMapSymbols/Cone_Yellow_Black_Yellow.svg \
SeaMapSymbols/Cone_Yellow.svg \
SeaMapSymbols/ContainerCrane.svg \
SeaMapSymbols/Crane.svg \
SeaMapSymbols/Cross.svg \
SeaMapSymbols/Customs.svg \
SeaMapSymbols/DeviationDolphin.svg \
SeaMapSymbols/DishAerial.svg \
SeaMapSymbols/DistanceI.svg \
SeaMapSymbols/DistanceU.svg \
SeaMapSymbols/Dolphin.svg \
SeaMapSymbols/Dome.svg \
SeaMapSymbols/Dot.svg \
SeaMapSymbols/Fishing_Harbour.svg \
SeaMapSymbols/Flagstaff.svg \
SeaMapSymbols/FlareStack.svg \
SeaMapSymbols/Float_Black_Red_Black.svg \
SeaMapSymbols/Float_Black_Yellow_Black.svg \
SeaMapSymbols/Float_Black_Yellow.svg \
SeaMapSymbols/Float_Green_Red_Green.svg \
SeaMapSymbols/Float_Green.svg \
SeaMapSymbols/Float_Green_White_Green_White.svg \
SeaMapSymbols/Float_Red_Green_Red_Green.svg \
SeaMapSymbols/Float_Red_Green_Red.svg \
SeaMapSymbols/Float_Red.svg \
SeaMapSymbols/Float_Red_White_Red_White.svg \
SeaMapSymbols/Float_Red_White.svg \
SeaMapSymbols/Float.svg \
SeaMapSymbols/Float_Yellow_Black.svg \
SeaMapSymbols/Float_Yellow_Black_Yellow.svg \
SeaMapSymbols/Float_Yellow.svg \
SeaMapSymbols/Fog_Signal.svg \
SeaMapSymbols/Fuel.svg \
SeaMapSymbols/harbour_master.svg \
SeaMapSymbols/HarbourMaster.svg \
SeaMapSymbols/Harbour.svg \
SeaMapSymbols/Hospital.svg \
SeaMapSymbols/Ice.svg \
SeaMapSymbols/International_tidyman_magenta.svg \
SeaMapSymbols/LandingSteps.svg \
SeaMapSymbols/LandTower.svg \
SeaMapSymbols/LaneArrow.svg \
SeaMapSymbols/Laundrette.svg \
SeaMapSymbols/Light_Green_120.svg \
SeaMapSymbols/Light_Green_240.svg \
SeaMapSymbols/Light_House.svg \
SeaMapSymbols/Light_Magenta_120.svg \
SeaMapSymbols/Light_Major.svg \
SeaMapSymbols/Light_Minor.svg \
SeaMapSymbols/Light_Red_120.svg \
SeaMapSymbols/Light_Red_240.svg \
SeaMapSymbols/Light.svg \
SeaMapSymbols/Light_White_120.svg \
SeaMapSymbols/Light_White_240.svg \
SeaMapSymbols/LineAnchor.svg \
SeaMapSymbols/LinePlane.svg \
SeaMapSymbols/LLight.svg \
SeaMapSymbols/Lock_Gate_Single.svg \
SeaMapSymbols/Lock_Gate.svg \
SeaMapSymbols/Lock_Single.svg \
SeaMapSymbols/Lock.svg \
SeaMapSymbols/LoLcaption.svg \
SeaMapSymbols/MarinaNF.svg \
SeaMapSymbols/Marina.svg \
SeaMapSymbols/MarineFarm.svg \
SeaMapSymbols/Mast.svg \
SeaMapSymbols/Minaret.svg \
SeaMapSymbols/Monastary.svg \
SeaMapSymbols/Monument.svg \
SeaMapSymbols/Notice_A10a.svg \
SeaMapSymbols/Notice_A10b.svg \
SeaMapSymbols/Notice_A12.svg \
SeaMapSymbols/Notice_A13.svg \
SeaMapSymbols/Notice_A14.svg \
SeaMapSymbols/Notice_A15.svg \
SeaMapSymbols/Notice_A16.svg \
SeaMapSymbols/Notice_A17.svg \
SeaMapSymbols/Notice_A18.svg \
SeaMapSymbols/Notice_A19.svg \
SeaMapSymbols/Notice_A1a.svg \
SeaMapSymbols/Notice_A1.svg \
SeaMapSymbols/Notice_A20.svg \
SeaMapSymbols/Notice_A2.svg \
SeaMapSymbols/Notice_A3.svg \
SeaMapSymbols/Notice_A4_1.svg \
SeaMapSymbols/Notice_A4.svg \
SeaMapSymbols/Notice_A5_1.svg \
SeaMapSymbols/Notice_A5.svg \
SeaMapSymbols/Notice_A6.svg \
SeaMapSymbols/Notice_A7.svg \
SeaMapSymbols/Notice_A8.svg \
SeaMapSymbols/Notice_A9.svg \
SeaMapSymbols/Notice_Anchor.svg \
SeaMapSymbols/Notice_A.svg \
SeaMapSymbols/Notice_B11.svg \
SeaMapSymbols/Notice_B1a.svg \
SeaMapSymbols/Notice_B1b.svg \
SeaMapSymbols/Notice_B2a.svg \
SeaMapSymbols/Notice_B2b.svg \
SeaMapSymbols/Notice_B3a.svg \
SeaMapSymbols/Notice_B3b.svg \
SeaMapSymbols/Notice_B4a.svg \
SeaMapSymbols/Notice_B4b.svg \
SeaMapSymbols/Notice_B5.svg \
SeaMapSymbols/Notice_B6.svg \
SeaMapSymbols/Notice_B7.svg \
SeaMapSymbols/Notice_B8.svg \
SeaMapSymbols/Notice_B9a.svg \
SeaMapSymbols/Notice_B9b.svg \
SeaMapSymbols/Notice_Bbm.svg \
SeaMapSymbols/Notice_Bcp.svg \
SeaMapSymbols/Notice_Bcs.svg \
SeaMapSymbols/Notice_Blb.svg \
SeaMapSymbols/Notice_Blmhr.svg \
SeaMapSymbols/Notice_Bmr.svg \
SeaMapSymbols/Notice_Bnank.svg \
SeaMapSymbols/Notice_Bollard.svg \
SeaMapSymbols/Notice_Bol.svg \
SeaMapSymbols/Notice_Bor.svg \
SeaMapSymbols/Notice_Bpm.svg \
SeaMapSymbols/Notice_Brb.svg \
SeaMapSymbols/Notice_Brs.svg \
SeaMapSymbols/Notice_Bsi.svg \
SeaMapSymbols/Notice_Bsm.svg \
SeaMapSymbols/Notice_B.svg \
SeaMapSymbols/Notice_Bwlar.svg \
SeaMapSymbols/Notice_Bwral.svg \
SeaMapSymbols/Notice_C1.svg \
SeaMapSymbols/Notice_C2.svg \
SeaMapSymbols/Notice_C3.svg \
SeaMapSymbols/Notice_C4.svg \
SeaMapSymbols/Notice_C5a.svg \
SeaMapSymbols/Notice_C5b.svg \
SeaMapSymbols/Notice_Crossing_L.svg \
SeaMapSymbols/Notice_Crossing_R.svg \
SeaMapSymbols/Notice_Crossing.svg \
SeaMapSymbols/Notice_D1a.svg \
SeaMapSymbols/Notice_D1b.svg \
SeaMapSymbols/Notice_D2a.svg \
SeaMapSymbols/Notice_D2b.svg \
SeaMapSymbols/Notice_D3a.svg \
SeaMapSymbols/Notice_D3b.svg \
SeaMapSymbols/Notice_E10a.svg \
SeaMapSymbols/Notice_E10b.svg \
SeaMapSymbols/Notice_E10c.svg \
SeaMapSymbols/Notice_E10d.svg \
SeaMapSymbols/Notice_E10e.svg \
SeaMapSymbols/Notice_E10f.svg \
SeaMapSymbols/Notice_E11.svg \
SeaMapSymbols/Notice_E13.svg \
SeaMapSymbols/Notice_E14.svg \
SeaMapSymbols/Notice_E15.svg \
SeaMapSymbols/Notice_E16.svg \
SeaMapSymbols/Notice_E17.svg \
SeaMapSymbols/Notice_E18.svg \
SeaMapSymbols/Notice_E19.svg \
SeaMapSymbols/Notice_E1.svg \
SeaMapSymbols/Notice_E20.svg \
SeaMapSymbols/Notice_E21.svg \
SeaMapSymbols/Notice_E22.svg \
SeaMapSymbols/Notice_E23.svg \
SeaMapSymbols/Notice_E24.svg \
SeaMapSymbols/Notice_E2.svg \
SeaMapSymbols/Notice_E3.svg \
SeaMapSymbols/Notice_E4a.svg \
SeaMapSymbols/Notice_E4b.svg \
SeaMapSymbols/Notice_E5_10.svg \
SeaMapSymbols/Notice_E5_11.svg \
SeaMapSymbols/Notice_E5_12.svg \
SeaMapSymbols/Notice_E5_13.svg \
SeaMapSymbols/Notice_E5_14.svg \
SeaMapSymbols/Notice_E5_15.svg \
SeaMapSymbols/Notice_E5_1.svg \
SeaMapSymbols/Notice_E5_2.svg \
SeaMapSymbols/Notice_E5_3.svg \
SeaMapSymbols/Notice_E5_4.svg \
SeaMapSymbols/Notice_E5_5.svg \
SeaMapSymbols/Notice_E5_6.svg \
SeaMapSymbols/Notice_E5_7.svg \
SeaMapSymbols/Notice_E5_8.svg \
SeaMapSymbols/Notice_E5_9.svg \
SeaMapSymbols/Notice_E5.svg \
SeaMapSymbols/Notice_E6.svg \
SeaMapSymbols/Notice_E7_1.svg \
SeaMapSymbols/Notice_E7.svg \
SeaMapSymbols/Notice_E8.svg \
SeaMapSymbols/Notice_E9a.svg \
SeaMapSymbols/Notice_E9b.svg \
SeaMapSymbols/Notice_E9c.svg \
SeaMapSymbols/Notice_E9d.svg \
SeaMapSymbols/Notice_E9e.svg \
SeaMapSymbols/Notice_E9f.svg \
SeaMapSymbols/Notice_E9g.svg \
SeaMapSymbols/Notice_E9h.svg \
SeaMapSymbols/Notice_E9i.svg \
SeaMapSymbols/Notice_E.svg \
SeaMapSymbols/Notice_Junction_L.svg \
SeaMapSymbols/Notice_Junction_R.svg \
SeaMapSymbols/Notice_Junction.svg \
SeaMapSymbols/Notice_Motor.svg \
SeaMapSymbols/Notice_Pcpl.svg \
SeaMapSymbols/Notice_Pcpr.svg \
SeaMapSymbols/Notice_Pcsl.svg \
SeaMapSymbols/Notice_Pcsr.svg \
SeaMapSymbols/Notice_Pmrl.svg \
SeaMapSymbols/Notice_Pmrr.svg \
SeaMapSymbols/Notice_Ppml.svg \
SeaMapSymbols/Notice_Ppmr.svg \
SeaMapSymbols/Notice_Proceed.svg \
SeaMapSymbols/Notice_Psml.svg \
SeaMapSymbols/Notice_Psmr.svg \
SeaMapSymbols/Notice_P.svg \
SeaMapSymbols/Notice_Pwlarl.svg \
SeaMapSymbols/Notice_Pwlarr.svg \
SeaMapSymbols/Notice_Pwrall.svg \
SeaMapSymbols/Notice_Pwralr.svg \
SeaMapSymbols/Notice_Rowboat.svg \
SeaMapSymbols/Notice_Sailboard.svg \
SeaMapSymbols/Notice_Sailboat.svg \
SeaMapSymbols/Notice_Slipway.svg \
SeaMapSymbols/Notice_Speedboat.svg \
SeaMapSymbols/Notice_Sport.svg \
SeaMapSymbols/Notice.svg \
SeaMapSymbols/Notice_Turn.svg \
SeaMapSymbols/Notice_VHF.svg \
SeaMapSymbols/Notice_Waterbike.svg \
SeaMapSymbols/Notice_Waterski.svg \
SeaMapSymbols/No_Wake.svg \
SeaMapSymbols/Perch_Port.svg \
SeaMapSymbols/Perch_Starboard.svg \
SeaMapSymbols/Pillar_Black_Red_Black.svg \
SeaMapSymbols/Pillar_Black_Yellow_Black.svg \
SeaMapSymbols/Pillar_Black_Yellow.svg \
SeaMapSymbols/Pillar_Green_Red_Green.svg \
SeaMapSymbols/Pillar_Green.svg \
SeaMapSymbols/Pillar_Green_White_Green_White.svg \
SeaMapSymbols/Pillar_Red_Green_Red_Green.svg \
SeaMapSymbols/Pillar_Red_Green_Red.svg \
SeaMapSymbols/Pillar_Red.svg \
SeaMapSymbols/Pillar_Red_White_Red_White.svg \
SeaMapSymbols/Pillar_Red_White.svg \
SeaMapSymbols/Pillar.svg \
SeaMapSymbols/Pillar_Yellow_Black.svg \
SeaMapSymbols/Pillar_Yellow_Black_Yellow.svg \
SeaMapSymbols/Pillar_Yellow.svg \
SeaMapSymbols/Pilot.svg \
SeaMapSymbols/Pipeline.svg \
SeaMapSymbols/Platform.svg \
SeaMapSymbols/PortCrane.svg \
SeaMapSymbols/Post.svg \
SeaMapSymbols/Pump_Out.svg \
SeaMapSymbols/Radar_Reflector_250.svg \
SeaMapSymbols/Radar_Reflector_280.svg \
SeaMapSymbols/Radar_Reflector_305.svg \
SeaMapSymbols/Radar_Reflector_320.svg \
SeaMapSymbols/Radar_Reflector_355.svg \
SeaMapSymbols/Radar_Reflector.svg \
SeaMapSymbols/Radar_Station.svg \
SeaMapSymbols/RadioMast.svg \
SeaMapSymbols/Rescue.svg \
SeaMapSymbols/Restricted.svg \
SeaMapSymbols/RockA.svg \
SeaMapSymbols/RockC.svg \
SeaMapSymbols/Rock.svg \
SeaMapSymbols/SailingClub.svg \
SeaMapSymbols/Sandwaves.svg \
SeaMapSymbols/Seaplane.svg \
SeaMapSymbols/Shower.svg \
SeaMapSymbols/Signal_Station.svg \
SeaMapSymbols/Slipway.svg \
SeaMapSymbols/Spar_Black_Red_Black.svg \
SeaMapSymbols/Spar_Black_Yellow_Black.svg \
SeaMapSymbols/Spar_Black_Yellow.svg \
SeaMapSymbols/Spar_Green_Red_Green.svg \
SeaMapSymbols/Spar_Green.svg \
SeaMapSymbols/Spar_Green_White_Green_White.svg \
SeaMapSymbols/Spar_Red_Green_Red_Green.svg \
SeaMapSymbols/Spar_Red_Green_Red.svg \
SeaMapSymbols/Spar_Red.svg \
SeaMapSymbols/Spar_Red_White_Red_White.svg \
SeaMapSymbols/Spar_Red_White.svg \
SeaMapSymbols/Spar.svg \
SeaMapSymbols/Spar_Yellow_Black.svg \
SeaMapSymbols/Spar_Yellow_Black_Yellow.svg \
SeaMapSymbols/Spar_Yellow.svg \
SeaMapSymbols/Sphere_Black_Red_Black.svg \
SeaMapSymbols/Sphere_Black_Yellow_Black.svg \
SeaMapSymbols/Sphere_Black_Yellow.svg \
SeaMapSymbols/Sphere_Green_Red_Green.svg \
SeaMapSymbols/Sphere_Green.svg \
SeaMapSymbols/Sphere_Green_White_Green_White.svg \
SeaMapSymbols/Sphere_Red_Green_Red_Green.svg \
SeaMapSymbols/Sphere_Red_Green_Red.svg \
SeaMapSymbols/Sphere_Red.svg \
SeaMapSymbols/Sphere_Red_White_Red_White.svg \
SeaMapSymbols/Sphere_Red_White.svg \
SeaMapSymbols/Sphere.svg \
SeaMapSymbols/Sphere_White_Yellow.svg \
SeaMapSymbols/Sphere_Yellow_Black.svg \
SeaMapSymbols/Sphere_Yellow_Black_Yellow.svg \
SeaMapSymbols/Sphere_Yellow_Red.svg \
SeaMapSymbols/Sphere_Yellow.svg \
SeaMapSymbols/Spire.svg \
SeaMapSymbols/Stake_Green.svg \
SeaMapSymbols/Stake_Red.svg \
SeaMapSymbols/Stake.svg \
SeaMapSymbols/Stake_Yellow.svg \
SeaMapSymbols/Storage.svg \
SeaMapSymbols/Super_Black.svg \
SeaMapSymbols/Super.svg \
SeaMapSymbols/Super_Yellow.svg \
SeaMapSymbols/Temple.svg \
SeaMapSymbols/Tidal_Scale.svg \
SeaMapSymbols/Tide_Gauge.svg \
SeaMapSymbols/Toilet.svg \
SeaMapSymbols/Top_Board.svg \
SeaMapSymbols/Top_Can_Beacon.svg \
SeaMapSymbols/Top_Can_Buoy_Small.svg \
SeaMapSymbols/Top_Can_Buoy.svg \
SeaMapSymbols/Top_Can_Float.svg \
SeaMapSymbols/Top_Can_Green_Beacon.svg \
SeaMapSymbols/Top_Can_Green_Buoy_Small.svg \
SeaMapSymbols/Top_Can_Green_Buoy.svg \
SeaMapSymbols/Top_Can_Green_Float.svg \
SeaMapSymbols/Top_Can_Red_Beacon.svg \
SeaMapSymbols/Top_Can_Red_Buoy_Small.svg \
SeaMapSymbols/Top_Can_Red_Buoy.svg \
SeaMapSymbols/Top_Can_Red_Float.svg \
SeaMapSymbols/Top_Can_Red_White_Red_Barrel.svg \
SeaMapSymbols/Top_Can_Red_White_Red_Beacon.svg \
SeaMapSymbols/Top_Can_Red_White_Red_Buoy_Small.svg \
SeaMapSymbols/Top_Can_Red_White_Red_Buoy.svg \
SeaMapSymbols/Top_Can.svg \
SeaMapSymbols/Top_Can_Yellow_Beacon.svg \
SeaMapSymbols/Top_Can_Yellow_Buoy_Small.svg \
SeaMapSymbols/Top_Can_Yellow_Buoy.svg \
SeaMapSymbols/Top_Can_Yellow_Float.svg \
SeaMapSymbols/Top_Cone_Beacon.svg \
SeaMapSymbols/Top_Cone_Buoy_Small.svg \
SeaMapSymbols/Top_Cone_Buoy.svg \
SeaMapSymbols/Top_ConeD.svg \
SeaMapSymbols/Top_Cone_Float.svg \
SeaMapSymbols/Top_Cone_Green_Beacon.svg \
SeaMapSymbols/Top_Cone_Green_Buoy_Small.svg \
SeaMapSymbols/Top_Cone_Green_Buoy.svg \
SeaMapSymbols/Top_Cone_Green_Float.svg \
SeaMapSymbols/Top_Cone_Inv_Beacon.svg \
SeaMapSymbols/Top_Cone_Inv_Red_Beacon.svg \
SeaMapSymbols/Top_Cone_Inv.svg \
SeaMapSymbols/Top_Cone_Red_Beacon.svg \
SeaMapSymbols/Top_Cone_Red_Buoy_Small.svg \
SeaMapSymbols/Top_Cone_Red_Buoy.svg \
SeaMapSymbols/Top_Cone_Red_Float.svg \
SeaMapSymbols/Top_ConesDU_Beacon.svg \
SeaMapSymbols/Top_ConesDU_Red_Green_Beacon.svg \
SeaMapSymbols/Top_Cone.svg \
SeaMapSymbols/Top_Cone_Yellow_Beacon.svg \
SeaMapSymbols/Top_Cone_Yellow_Buoy_Small.svg \
SeaMapSymbols/Top_Cone_Yellow_Buoy.svg \
SeaMapSymbols/Top_Cone_Yellow_Float.svg \
SeaMapSymbols/Top_Cross_Beacon.svg \
SeaMapSymbols/Top_Cross.svg \
SeaMapSymbols/Top_Cross_Yellow_Beacon.svg \
SeaMapSymbols/Top_Diamond_Beacon.svg \
SeaMapSymbols/Top_Diamond_Green_White_Beacon.svg \
SeaMapSymbols/Top_Diamond.svg \
SeaMapSymbols/Top_Diamond_White_Green_Beacon.svg \
SeaMapSymbols/Top_Diamond_Yellow_Black_Yellow_Beacon.svg \
SeaMapSymbols/Top_East_Beacon.svg \
SeaMapSymbols/Top_East_Buoy_Small.svg \
SeaMapSymbols/Top_East_Buoy.svg \
SeaMapSymbols/Top_East_Float.svg \
SeaMapSymbols/Top_East.svg \
SeaMapSymbols/Top_Isol_Beacon.svg \
SeaMapSymbols/Top_Isol_Buoy_Small.svg \
SeaMapSymbols/Top_Isol_Buoy.svg \
SeaMapSymbols/Top_Isol_Float.svg \
SeaMapSymbols/Top_Isol.svg \
SeaMapSymbols/Top_Mooring_Buoy_Small.svg \
SeaMapSymbols/Top_Mooring_Float.svg \
SeaMapSymbols/Top_Mooring.svg \
SeaMapSymbols/Top_North_Beacon.svg \
SeaMapSymbols/Top_North_Buoy_Small.svg \
SeaMapSymbols/Top_North_Buoy.svg \
SeaMapSymbols/Top_North_Float.svg \
SeaMapSymbols/Top_North.svg \
SeaMapSymbols/Top_South_Beacon.svg \
SeaMapSymbols/Top_South_Buoy_Small.svg \
SeaMapSymbols/Top_South_Buoy.svg \
SeaMapSymbols/Top_South_Float.svg \
SeaMapSymbols/Top_South.svg \
SeaMapSymbols/Top_Sphere_Beacon.svg \
SeaMapSymbols/Top_Sphere_Buoy_Small.svg \
SeaMapSymbols/Top_Sphere_Buoy.svg \
SeaMapSymbols/Top_Sphere_Float.svg \
SeaMapSymbols/Top_Sphere_Red_Beacon.svg \
SeaMapSymbols/Top_Sphere_Red_Buoy_Small.svg \
SeaMapSymbols/Top_Sphere_Red_Buoy.svg \
SeaMapSymbols/Top_Sphere_Red_Float.svg \
SeaMapSymbols/Top_Sphere_Red_Green_Beacon.svg \
SeaMapSymbols/Top_Sphere_Red_Green_Buoy_Small.svg \
SeaMapSymbols/Top_Sphere_Red_Green_Buoy.svg \
SeaMapSymbols/Top_Sphere_Red_Green_Float.svg \
SeaMapSymbols/Top_Sphere.svg \
SeaMapSymbols/Top_Square_Beacon.svg \
SeaMapSymbols/Top_Square.svg \
SeaMapSymbols/Top_Square_White_Red_Beacon.svg \
SeaMapSymbols/Top_Square_White_Red_White_Beacon.svg \
SeaMapSymbols/Top_Square_Yellow_Black_Yellow_Beacon.svg \
SeaMapSymbols/Top_Triangle_Beacon.svg \
SeaMapSymbols/Top_TriangleD.svg \
SeaMapSymbols/Top_Triangle_Green_Beacon.svg \
SeaMapSymbols/Top_Triangle_Inv_Beacon.svg \
SeaMapSymbols/Top_Triangle_Inv_Red_Beacon.svg \
SeaMapSymbols/Top_Triangle_Inv.svg \
SeaMapSymbols/Top_Triangle_Inv_White_Red_Beacon.svg \
SeaMapSymbols/Top_Triangle.svg \
SeaMapSymbols/Top_Triangle_White_Green_Beacon.svg \
SeaMapSymbols/Top_West_Beacon.svg \
SeaMapSymbols/Top_West_Buoy_Small.svg \
SeaMapSymbols/Top_West_Buoy.svg \
SeaMapSymbols/Top_West_Float.svg \
SeaMapSymbols/Top_West.svg \
SeaMapSymbols/Top_X_Beacon.svg \
SeaMapSymbols/Top_X_Buoy_Small.svg \
SeaMapSymbols/Top_X_Buoy.svg \
SeaMapSymbols/Top_X_Float.svg \
SeaMapSymbols/Top_X_Red_Beacon.svg \
SeaMapSymbols/Top_X_Red_Buoy_Small.svg \
SeaMapSymbols/Top_X_Red_Buoy.svg \
SeaMapSymbols/Top_X_Red_Float.svg \
SeaMapSymbols/Top_X.svg \
SeaMapSymbols/Top_X_Yellow_Beacon.svg \
SeaMapSymbols/Top_X_Yellow_Buoy_Small.svg \
SeaMapSymbols/Top_X_Yellow_Buoy.svg \
SeaMapSymbols/Top_X_Yellow_Float.svg \
SeaMapSymbols/Tower_Black_Red_Black.svg \
SeaMapSymbols/Tower_Black_Yellow_Black.svg \
SeaMapSymbols/Tower_Black_Yellow.svg \
SeaMapSymbols/Tower_Green_Red_Green.svg \
SeaMapSymbols/Tower_Green.svg \
SeaMapSymbols/Tower_Green_White_Green_White.svg \
SeaMapSymbols/Tower_Red_Green_Red_Green.svg \
SeaMapSymbols/Tower_Red_Green_Red.svg \
SeaMapSymbols/Tower_Red.svg \
SeaMapSymbols/Tower_Red_White_Red_White.svg \
SeaMapSymbols/Tower.svg \
SeaMapSymbols/Tower_Yellow_Black.svg \
SeaMapSymbols/Tower_Yellow_Black_Yellow.svg \
SeaMapSymbols/Tower_Yellow.svg \
SeaMapSymbols/Triangle_Bottom.svg \
SeaMapSymbols/Triangle_Left.svg \
SeaMapSymbols/Triangle_Right.svg \
SeaMapSymbols/Triangle.svg \
SeaMapSymbols/Turning_Point.svg \
SeaMapSymbols/Visitor_Berth.svg \
SeaMapSymbols/Visitor_Mooring.svg \
SeaMapSymbols/Waste_Disposal.svg \
SeaMapSymbols/WaterTower.svg \
SeaMapSymbols/Wind_Farm.svg \
SeaMapSymbols/Windmill.svg \
SeaMapSymbols/Wind_Motor.svg \
SeaMapSymbols/Windsock.svg \
SeaMapSymbols/Withy_Port.svg \
SeaMapSymbols/Withy_Starboard.svg \
SeaMapSymbols/WreckD.svg \
SeaMapSymbols/WreckND.svg \
SeaMapSymbols/WreckS.svg

dist_noinst_DATA = test/Makefile test/testdata.osm test/rules
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
tools/smfilter2: $(top_builddir)/config.status $(top_srcdir)/tools/smfilter2.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-nodist_binSCRIPTS: $(nodist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-nodist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-dist_available_rulesDATA: $(dist_available_rules_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_available_rules_DATA)'; test -n "$(available_rulesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(available_rulesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(available_rulesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(available_rulesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(available_rulesdir)" || exit $$?; \
	done

uninstall-dist_available_rulesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_available_rules_DATA)'; test -n "$(available_rulesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(available_rulesdir)'; $(am__uninstall_files_from_dir)
install-dist_seamapsymbolsDATA: $(dist_seamapsymbols_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_seamapsymbols_DATA)'; test -n "$(seamapsymbolsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(seamapsymbolsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(seamapsymbolsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(seamapsymbolsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(seamapsymbolsdir)" || exit $$?; \
	done

uninstall-dist_seamapsymbolsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_seamapsymbols_DATA)'; test -n "$(seamapsymbolsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(seamapsymbolsdir)'; $(am__uninstall_files_from_dir)
install-dist_smrender_dataDATA: $(dist_smrender_data_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_smrender_data_DATA)'; test -n "$(smrender_datadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(smrender_datadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(smrender_datadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(smrender_datadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(smrender_datadir)" || exit $$?; \
	done

uninstall-dist_smrender_dataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_smrender_data_DATA)'; test -n "$(smrender_datadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(smrender_datadir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(SCRIPTS) $(DATA) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(available_rulesdir)" "$(DESTDIR)$(seamapsymbolsdir)" "$(DESTDIR)$(smrender_datadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-hdr \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_available_rulesDATA \
	install-dist_seamapsymbolsDATA install-dist_smrender_dataDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-nodist_binSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-dist_available_rulesDATA \
	uninstall-dist_seamapsymbolsDATA \
	uninstall-dist_smrender_dataDATA uninstall-nodist_binSCRIPTS

.MAKE: $(am__recursive_targets) all install-am install-data-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-cscope clean-generic \
	clean-libtool cscope cscopelist-am ctags ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-generic \
	distclean-hdr distclean-libtool distclean-tags distcleancheck \
	distdir distuninstallcheck dvi dvi-am html html-am info \
	info-am install install-am install-data install-data-am \
	install-data-hook install-dist_available_rulesDATA \
	install-dist_seamapsymbolsDATA install-dist_smrender_dataDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-nodist_binSCRIPTS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am \
	uninstall-dist_available_rulesDATA \
	uninstall-dist_seamapsymbolsDATA \
	uninstall-dist_smrender_dataDATA uninstall-nodist_binSCRIPTS

.PRECIOUS: Makefile


install-data-hook:
	if test -e $(DESTDIR)$(r100k_yedir) ; then \
		rm -r $(DESTDIR)$(r100k_yedir) ; \
		fi
	$(MKDIR_P) $(DESTDIR)$(r100k_yedir) && \
		cd $(DESTDIR)$(r100k_yedir) && \
		$(LN_S) ../available/basemap.osm 000basemap.osm && \
		$(LN_S) ../available/translation.osm 001translation.osm && \
		$(LN_S) ../available/landfeatures.osm 010landfeatures.osm && \
		$(LN_S) ../available/route.osm 020route.osm && \
		$(LN_S) ../available/lightsectors_col.osm 028sectors.osm && \
		$(LN_S) ../available/seamark_area.osm 027area.osm && \
		$(LN_S) ../available/seamark_rocks.osm 026rocks.osm && \
		$(LN_S) ../available/seamark_buoy.osm 029buoy.osm && \
		$(LN_S) ../available/seamark_beacon.osm 030beacon.osm && \
		$(LN_S) ../available/seamark_topmark.osm 031topmark.osm && \
		$(LN_S) ../available/soundings.osm 032soundings.osm && \
		$(LN_S) ../available/legend.osm 900legend.osm
	if test -e $(DESTDIR)$(rules_100000dir) ; then \
		rm -r $(DESTDIR)$(rules_100000dir) ; \
		fi
	$(LN_S) $(DESTDIR)$(r100k_yedir) $(DESTDIR)$(rules_100000dir)
	if test -e $(DESTDIR)$(r100k_coldir) ; then \
		rm -r $(DESTDIR)$(r100k_coldir) ; \
		fi
	$(MKDIR_P) $(DESTDIR)$(r100k_coldir) && \
		cd $(DESTDIR)$(r100k_coldir) && \
		$(LN_S) ../available/basemap_col.osm 000basemap.osm && \
		$(LN_S) ../available/translation.osm 001translation.osm && \
		$(LN_S) ../available/landfeatures.osm 010landfeatures.osm && \
		$(LN_S) ../available/route.osm 020route.osm && \
		$(LN_S) ../available/lightsectors_col.osm 028sectors.osm && \
		$(LN_S) ../available/seamark_area.osm 027area.osm && \
		$(LN_S) ../available/seamark_rocks.osm 026rocks.osm && \
		$(LN_S) ../available/seamark_buoy.osm 029buoy.osm && \
		$(LN_S) ../available/seamark_beacon.osm 030beacon.osm && \
		$(LN_S) ../available/seamark_topmark.osm 031topmark.osm && \
		$(LN_S) ../available/soundings.osm 032soundings.osm && \
		$(LN_S) ../available/legend.osm 900legend.osm

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
